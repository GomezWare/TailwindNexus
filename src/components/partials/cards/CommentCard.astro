---
/**
 * This component is for representing a comment in a card
 */

interface Props {
  userId;
  userAvatar;
  userName;
  commentDate;
  content;
  componentId?;
}
const { userId, userAvatar, userName, commentDate, content, componentId } =
  Astro.props;
---

<div class="flex justify-start gap-4 bg-slate-700 p-4 lg:w-2/3 rounded">
  <a class="w-16 md:w-24 shrink-0" href={"/users/" + userId}>
    <img class="w-full" src={userAvatar} alt="User avatar" />
  </a>
  <div class="">
    <p>
      <a
        class="text-teal-400 hover:bg-cyan-800 underline transition-all text-xl"
        href={"/users/" + userId}>{userName}</a
      >
      <span class="dateConvert ml-4" data-date={commentDate}> </span>
    </p>
    <p class="mt-2 font-light">
      {content}
    </p>
    {
      componentId != undefined && (
        <p class="mt-2 font-light">
          <a
            class="text-teal-400 hover:bg-cyan-800 underline transition-all"
            href={"/components/" + componentId}
          >
            View Component
          </a>
        </p>
      )
    }
  </div>
</div>

<script>
  // This script is for convert time to user timezone and format unix timestamps
  import { convertUnixTimestampToLocalTime } from "@utils/time";

  // Event for convert all dates from UTC timestamps to user based timezone ISO String
  // We have to wait until all dom is loaded
  window.addEventListener("DOMContentLoaded", () => {
    // Recover all dates
    document.querySelectorAll(".dateConvert").forEach((date) => {
      // get unix timestamp front frontmatter
      const unixTimestamp = date.getAttribute("data-date");

      // Convert the time using the fucntion and writting into the span element
      // Timezone is obtain ny user navigator property
      date.innerHTML = convertUnixTimestampToLocalTime(
        unixTimestamp,
        Intl.DateTimeFormat().resolvedOptions().timeZone
      );
    });
  });
</script>
