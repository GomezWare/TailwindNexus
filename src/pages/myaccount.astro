---
/**
 * This is the user page, it will show the user indicated in the url
 */

import Layout from "../layouts/Layout.astro";
import MyInformation from "../components/myaccount/MyInformation.astro";
import UserSharer from "src/components/user/UserSharer.astro";
import ComponentCard from "src/components/partials/cards/ComponentCard.astro";
import { getSession } from "auth-astro/server";
import { registerUser, checkUserMail } from "@services/auth";

// Recover the session
const session = await getSession(Astro.request);
// User validations

// Redirect if user not logged
if (!session) {
  return Astro.redirect("/login");
}

// Try to get user id
let userId = -1;
userId = await checkUserMail(session.user.email);

// Redirect to 404 if there is a database error
if (userId == -404) {
  return Astro.redirect("/404");
}

// Check if user exist else creates the user and reload the page
if (userId == -1) {
  try {
    await registerUser(
      session.user.name,
      session.user.email,
      session.user.image
    );
    return Astro.redirect("/myaccount");
  } catch (error) {
    console.log(error);
    return Astro.redirect("/404");
  }
}

// Fetch datas from the API
const user = await fetch(Astro.url.origin + "/api/user/" + userId).then(
  (data) => data.json()
);

// Variable to know if user have components

let haveComponents;
if (user.components.length == 0) {
  haveComponents = false;
} else {
  haveComponents = true;
}
---

<Layout title="User" footer={true}>
  <MyInformation
    username={user.name}
    avatar={user.avatar}
    components={user.components.length}
    followers={user.followers.length}
  />
  <UserSharer id={userId} />
  <section class="container">
    <h2 class="text-3xl mt-16 font-title text-cyan-400 text-center sm:text-left">Your components:</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 mt-10">
      {
        haveComponents ? (
          <Fragment>
            {user.components.map((component) => (
              <ComponentCard
                id={component.id}
                name={component.name}
                thumbnail={component.thumbnail}
                needsAlpine={component.needsAlpine}
                needsCDN={component.needsCDN}
                userData={user}
                totalComments={component.totalComments}
              />
            ))}
          </Fragment>
        ) : (
          <div class="col-span-3 flex flex-col border rounded bg-slate-700 items-center">
            <p class=" mx-auto w-1/3 text-center p-5 text-teal-200">
              You have not uploaded any components yet ðŸ˜ž
            </p>
          </div>
        )
      }
    </div>
  </section>
</Layout>
