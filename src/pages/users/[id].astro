---
/**
 * This is the user page, it will show the user indicated in the url
 */

import Layout from "../../layouts/Layout.astro";
import UserInfo from "../../components/user/UserInfo.astro";
import ComponentCard from "src/components/partials/cards/ComponentCard.astro";
import UserSharer from "src/components/user/UserSharer.astro";
import CommentCard from "src/components/partials/cards/CommentCard.astro";

// Get id via Astro params
const { id } = Astro.params;

// Fetch datas from the API
const user = await fetch(Astro.url.origin + "/api/user/" + id).then((data) =>
  data.json()
);

// If the api returned a blank array (null response) redirect user to 404
if (user.length == 0) {
  return Astro.redirect("/404");
}

// Variable to know if user have components
let haveComponents;

if (user.components.length == 0) {
  haveComponents = false;
} else {
  haveComponents = true;
}

// Variable to know if user have comments

let haveComments;
if (user.comments.length == 0) {
  haveComments = false;
} else {
  haveComments = true;
}
---

<Layout title={user.name} footer={true}>
  <UserInfo
    username={user.name}
    avatar={user.avatar}
    components={user.components.length}
    followers={user.followers.length}
  />

  <UserSharer id={id} />

  <section class="container">
    <h2
      class="text-3xl mt-16 font-title text-cyan-400 text-center sm:text-left"
    >
      {user.name}'s components:
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 mt-10">
      {
        haveComponents ? (
          <Fragment>
            {user.components.map((component) => (
              <ComponentCard
                id={component.id}
                name={component.name}
                thumbnail={component.thumbnail}
                needsAlpine={component.needsAlpine}
                needsCDN={component.needsCDN}
                userData={user}
                totalComments={component.totalComments}
              />
            ))}
          </Fragment>
        ) : (
          <div class="col-span-3 flex flex-col border rounded bg-slate-700 items-center">
            <p class=" mx-auto w-1/3 text-center p-5 text-teal-200">
              This user has not uploaded any components yet 😞
            </p>
          </div>
        )
      }
    </div>
  </section>
  <section class="container">
    <h2
      class="text-3xl mt-16 font-title text-cyan-400 text-center sm:text-left"
    >
      {user.name}'s comments:
    </h2>
    <div class="grid grid-cols-1 gap-5 mt-10">
      {
        haveComments ? (
          <Fragment>
            {user.comments.map((comment) => (
              <CommentCard
                userId={comment.userId}
                commentDate={comment.createdAt}
                userAvatar={user.avatar}
                content={comment.content}
                userName={user.name}
                componentId={comment.componentId}
              />
            ))}
          </Fragment>
        ) : (
          <div class="col-span-3 flex flex-col border rounded bg-slate-700 items-center">
            <p class=" mx-auto w-1/3 text-center p-5 text-teal-200">
              User have not commented yet 😞
            </p>
          </div>
        )
      }
    </div>
  </section>
</Layout>
